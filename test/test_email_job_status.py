# coding: utf-8

"""
    Elastic Email REST API

    This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://app.elasticemail.com/marketing/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given requestâ€™s description.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>

    The version of the OpenAPI document: 4.0.0
    Contact: support@elasticemail.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ElasticEmail.models.email_job_status import EmailJobStatus

class TestEmailJobStatus(unittest.TestCase):
    """EmailJobStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EmailJobStatus:
        """Test EmailJobStatus
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EmailJobStatus`
        """
        model = EmailJobStatus()
        if include_optional:
            return EmailJobStatus(
                id = '123456',
                status = '',
                recipients_count = 56,
                failed = [
                    ElasticEmail.models.email_job_failed_status.EmailJobFailedStatus(
                        address = '', 
                        error = '', 
                        error_code = 550, 
                        category = '', )
                    ],
                failed_count = 1000,
                sent = [
                    ''
                    ],
                sent_count = 1000,
                delivered = ["1000"],
                delivered_count = 56,
                pending = [
                    ''
                    ],
                pending_count = 56,
                opened = ["1000"],
                opened_count = 1000,
                clicked = ["1000"],
                clicked_count = 1000,
                unsubscribed = ["1000"],
                unsubscribed_count = 1000,
                abuse_reports = [
                    ''
                    ],
                abuse_reports_count = 56,
                message_ids = [
                    ''
                    ]
            )
        else:
            return EmailJobStatus(
        )
        """

    def testEmailJobStatus(self):
        """Test EmailJobStatus"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
