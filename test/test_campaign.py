# coding: utf-8

"""
    Elastic Email REST API

    This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://app.elasticemail.com/marketing/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given requestâ€™s description.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>

    The version of the OpenAPI document: 4.0.0
    Contact: support@elasticemail.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ElasticEmail.models.campaign import Campaign

class TestCampaign(unittest.TestCase):
    """Campaign unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Campaign:
        """Test Campaign
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Campaign`
        """
        model = Campaign()
        if include_optional:
            return Campaign(
                content = [
                    ElasticEmail.models.campaign_template.CampaignTemplate(
                        poolname = 'My Custom Pool', 
                        from = 'John Doe <email@domain.com>', 
                        reply_to = 'John Doe <email@domain.com>', 
                        subject = 'Hello!', 
                        template_name = 'Template01', 
                        attach_files = ["preuploaded.jpg"], 
                        utm = ElasticEmail.models.utm.Utm(
                            source = '', 
                            medium = '', 
                            campaign = '', 
                            content = '', ), )
                    ],
                name = '',
                status = 'Deleted',
                recipients = ElasticEmail.models.campaign_recipient.CampaignRecipient(
                    list_names = [
                        ''
                        ], 
                    segment_names = [
                        ''
                        ], ),
                options = ElasticEmail.models.campaign_options.CampaignOptions(
                    delivery_optimization = 'None', 
                    track_opens = True, 
                    track_clicks = True, 
                    schedule_for = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    trigger_frequency = 1.337, 
                    trigger_count = 56, 
                    split_options = ElasticEmail.models.split_options.SplitOptions(
                        optimize_for = 'Opens', 
                        optimize_period_minutes = 30, ), )
            )
        else:
            return Campaign(
                name = '',
                recipients = ElasticEmail.models.campaign_recipient.CampaignRecipient(
                    list_names = [
                        ''
                        ], 
                    segment_names = [
                        ''
                        ], ),
        )
        """

    def testCampaign(self):
        """Test Campaign"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
