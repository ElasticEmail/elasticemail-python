# coding: utf-8

"""
    Elastic Email REST API

    This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://app.elasticemail.com/marketing/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given requestâ€™s description.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>  # noqa: E501

    The version of the OpenAPI document: 4.0.0
    Contact: support@elasticemail.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from ElasticEmail import schemas  # noqa: F401


class EncodingType(
    schemas.EnumBase,
    schemas.StrSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Encoding type for the email headers
    """


    class MetaOapg:
        enum_value_to_name = {
            "UserProvided": "USER_PROVIDED",
            "None": "NONE",
            "Raw7bit": "RAW7BIT",
            "Raw8bit": "RAW8BIT",
            "QuotedPrintable": "QUOTED_PRINTABLE",
            "Base64": "BASE64",
            "Uue": "UUE",
        }
    
    @schemas.classproperty
    def USER_PROVIDED(cls):
        return cls("UserProvided")
    
    @schemas.classproperty
    def NONE(cls):
        return cls("None")
    
    @schemas.classproperty
    def RAW7BIT(cls):
        return cls("Raw7bit")
    
    @schemas.classproperty
    def RAW8BIT(cls):
        return cls("Raw8bit")
    
    @schemas.classproperty
    def QUOTED_PRINTABLE(cls):
        return cls("QuotedPrintable")
    
    @schemas.classproperty
    def BASE64(cls):
        return cls("Base64")
    
    @schemas.classproperty
    def UUE(cls):
        return cls("Uue")
